# -*- coding: utf-8 -*-
"""movies recomendation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dwpJ4MFsKzKBN0rCvRmuwlA83vron3VV
"""

import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
import difflib
from sklearn.metrics.pairwise import cosine_similarity

movies_data=pd.read_csv('/content/movies.csv')

movies_data.head()

movies_data.info()

movies_data.describe()

movies_data.shape

movies_data.isnull()

movies_data[['genres','keywords','tagline','cast','director']].isnull()

selcted_features=['genres','keywords','tagline','cast','director']

for feature in selcted_features:
  movies_data[feature]=movies_data[feature].fillna('')

movies_data[['genres','keywords','tagline','cast','director']].isnull().sum()

combined_feature=movies_data['genres']+' '+movies_data['keywords']+' '+movies_data['tagline']+' '+movies_data['cast']+' '+movies_data['director']

vectorize=TfidfVectorizer()

feature_vector=vectorize.fit_transform(combined_feature)

print(feature_vector)

#checking similirity
similirity=cosine_similarity(feature_vector)

print(similirity)

list_of_movies=movies_data['title'].tolist()
print(list_of_movies)

movie_name=input("enter movie name:")

clossest_match=difflib.get_close_matches(movie_name,list_of_movies)
print(clossest_match)

index_movie=movies_data[movies_data.title == clossest_match[0]]['index'].values[0]
print(index_movie)

#similirarity score of movies
similirity_score=list(enumerate(similirity[index_movie]))
print(similirity_score)

from ast import Lambda
# sorting movies based on siliar
similar_score=sorted(similirity_score,key=lambda x:x[1],reverse= True)
print(similar_score)

# movies name sugested
print("recommended movies for you:")
i=1
for movie in similar_score:
  index=movie[0]
  title_from_index=movies_data[movies_data.index==index]['title'].values[0]
  if(i<=5):
    print(i,' ',title_from_index)
    i+=1

"""movie recommendation system

"""

# movie recommendation system
movie_name=input("enter movie name:")
list_of_movies=movies_data['title'].tolist()
clossest_match=difflib.get_close_matches(movie_name,list_of_movies)
index_movie=movies_data[movies_data.title == clossest_match[0]]['index'].values[0]
similirity_score=list(enumerate(similirity[index_movie]))
similar_score=sorted(similirity_score,key=lambda x:x[1],reverse= True)
print("recommended movies for you:")
i=1
for movie in similar_score:
  index=movie[0]
  title_from_index=movies_data[movies_data.index==index]['title'].values[0]
  if(i<=5):
    print(i,' ',title_from_index)
    i+=1